{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\chat-site\\\\client\\\\src\\\\routes\\\\PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuth\n  } = useSelector(state => state.authState);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    render: props => isAuth ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 73\n    }, this),\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PrivateRoute, \"j1iNDdaI87Xf6fHwciId9lA56rc=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/node/chat-site/client/src/routes/PrivateRoute.tsx"],"names":["React","useSelector","Redirect","Route","PrivateRoute","component","Component","rest","isAuth","state","authState","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA4C,kBAA5C;;AAQA,OAAO,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAClF,QAAM;AAAEC,IAAAA;AAAF,MAAaP,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACC,SAA7B,CAA9B;AAEA,sBAAO,QAAC,KAAD;AAAO,IAAA,MAAM,EAAGC,KAAD,IAAYH,MAAM,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAA/D;AAAA,OAAyFJ;AAAzF;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJM;;GAAMH,Y;UACQH,W;;;KADRG,Y","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nimport { RootState } from '../utilities/types';\r\n\r\ninterface Props extends RouteProps {\r\n  component: any;\r\n}\r\n\r\nexport const PrivateRoute: React.FC<Props> = ({ component: Component, ...rest }) => {\r\n  const { isAuth } = useSelector((state: RootState) => state.authState);\r\n\r\n  return <Route render={(props) => (isAuth ? <Component {...props} /> : <Redirect to='/' />)} {...rest} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}