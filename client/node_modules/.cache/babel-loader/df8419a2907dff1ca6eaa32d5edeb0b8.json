{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { WEB_SOCKET_HOST } from '../utilities/config'; // A little API for the stateful socket connection, just to keep it out of the global\n// namespace and away from the socket middleware\n\nexport default class SocketClient {\n  constructor() {\n    this.socket = void 0;\n  }\n\n  connect() {\n    this.socket = io(WEB_SOCKET_HOST);\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  emit(eventName, data) {\n    console.log('emit발생');\n\n    if (this.socket) {\n      console.log('이벤트 name: ', eventName);\n      this.socket.emit(eventName, data);\n    }\n  }\n\n  on(eventName, func) {\n    if (this.socket) {\n      this.socket.on(eventName, func);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/node/chat-site/client/src/api/SocketClient.ts"],"names":["io","WEB_SOCKET_HOST","SocketClient","socket","connect","disconnect","emit","eventName","data","console","log","on","func"],"mappings":"AAAA,SAASA,EAAT,QAA2B,kBAA3B;AAEA,SAASC,eAAT,QAAgC,qBAAhC,C,CAEA;AACA;;AACA,eAAe,MAAMC,YAAN,CAAmB;AAAA;AAAA,SAChCC,MADgC;AAAA;;AAGhCC,EAAAA,OAAO,GAAG;AACR,SAAKD,MAAL,GAAcH,EAAE,CAACC,eAAD,CAAhB;AACD;;AAEDI,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKF,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYE,UAAZ;AACA,WAAKF,MAAL,GAAc,IAAd;AACD;AACF;;AAEDG,EAAAA,IAAI,CAACC,SAAD,EAAoBC,IAApB,EAA+B;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAI,KAAKP,MAAT,EAAiB;AACfM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,SAA1B;AACA,WAAKJ,MAAL,CAAYG,IAAZ,CAAiBC,SAAjB,EAA4BC,IAA5B;AACD;AACF;;AAEDG,EAAAA,EAAE,CAACJ,SAAD,EAAoBK,IAApB,EAAsC;AACtC,QAAI,KAAKT,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYQ,EAAZ,CAAeJ,SAAf,EAA0BK,IAA1B;AACD;AACF;;AA1B+B","sourcesContent":["import { io, Socket } from 'socket.io-client';\n\nimport { WEB_SOCKET_HOST } from '../utilities/config';\n\n// A little API for the stateful socket connection, just to keep it out of the global\n// namespace and away from the socket middleware\nexport default class SocketClient {\n  socket: Socket | null;\n\n  connect() {\n    this.socket = io(WEB_SOCKET_HOST);\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  emit(eventName: string, data: any) {\n    console.log('emit발생');\n    if (this.socket) {\n      console.log('이벤트 name: ', eventName);\n      this.socket.emit(eventName, data);\n    }\n  }\n\n  on(eventName: string, func: () => void) {\n    if (this.socket) {\n      this.socket.on(eventName, func);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}