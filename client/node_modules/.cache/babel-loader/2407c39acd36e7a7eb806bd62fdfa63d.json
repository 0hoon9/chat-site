{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\chat-site\\\\client\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\nimport { login } from './store/auth.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [ifUserIsLoggedIn, setIfUserIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('user');\n\n    if (loggedInUser) {\n      dispatch(login(JSON.parse(loggedInUser)));\n    }\n\n    setIfUserIsLoggedIn(true);\n  });\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: Login,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/chat\",\n      component: Main,\n      exact: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pvmDeaLxj29I0QPVT/9U1gln09Q=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/node/chat-site/client/src/App.tsx"],"names":["React","useState","useEffect","Switch","Route","useDispatch","Login","Main","login","App","dispatch","ifUserIsLoggedIn","setIfUserIsLoggedIn","loggedInUser","localStorage","getItem","JSON","parse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAA2BC,KAA3B,QAAwC,kBAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,KAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB;;AAEA,QAAIF,YAAJ,EAAkB;AAChBH,MAAAA,QAAQ,CAACF,KAAK,CAACQ,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAD,CAAN,CAAR;AACD;;AAEDD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GARQ,CAAT;AAUA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEN,KAA3B;AAAkC,MAAA,KAAK;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,IAA/B;AAAqC,MAAA,KAAK;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApBM;;GAAME,G;UACMJ,W;;;KADNI,G;AAsBb,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { PublicRoute } from './routes/PublicRoute';\nimport { Login } from './screens/Login';\nimport { Main } from './screens/Main';\nimport { login } from './store/auth.slice';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [ifUserIsLoggedIn, setIfUserIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('user');\n\n    if (loggedInUser) {\n      dispatch(login(JSON.parse(loggedInUser)));\n    }\n\n    setIfUserIsLoggedIn(true);\n  });\n\n  return (\n    <Switch>\n      <Route path='/' component={Login} exact />\n      <Route path='/chat' component={Main} exact />\n    </Switch>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}