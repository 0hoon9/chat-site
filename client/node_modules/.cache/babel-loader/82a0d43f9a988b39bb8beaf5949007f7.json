{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\chat-site\\\\client\\\\src\\\\screens\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { ChatArea } from '../components/ChatArea';\nimport { Navbar } from '../components/Navbar';\nimport { Sidebar } from '../components/Sidebar';\nimport { sendMessage, getMessages } from '../store/messages.slice';\nimport { sendThisUserIsTyping, sendThisUserStoppedTyping } from '../store/users.slice';\nimport { logout } from '../store/auth.slice';\nimport { getUsers } from '../store/users.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [messageInput, setMessageInput] = useState('');\n  const {\n    myUser\n  } = useSelector(state => state.authState);\n  const {\n    users,\n    loading: usersLoading,\n    onlineUsers,\n    typingUsers\n  } = useSelector(state => state.usersState);\n  const {\n    messages,\n    loading: messageLoading\n  } = useSelector(state => state.messagesState);\n\n  const handleLogoutClick = event => {\n    // 로그아웃시 localStorage 유저 정보 삭제\n    localStorage.removeItem('user');\n    dispatch(logout());\n  };\n\n  const debouncedTypingIndicationEmit = useCallback(_.debounce(() => dispatch(sendThisUserIsTyping(myUser.username)), 500), [] // will be created only once initially\n  );\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    if (messageInput && messageInput.trim() !== '') {\n      const message = {\n        content: messageInput.trim(),\n        date: dayjs().format(),\n        author: myUser.username\n      };\n      dispatch(sendThisUserStoppedTyping(myUser.username));\n      dispatch(sendMessage(message));\n    }\n\n    setMessageInput('');\n  };\n\n  const handleChangeInput = event => {\n    if (event.target.value !== '') setMessageInput(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log('users: ', users);\n\n    if (messageInput === '') {\n      dispatch(sendThisUserStoppedTyping(myUser.username));\n      setTimeout(() => {\n        dispatch(sendThisUserStoppedTyping(myUser.username));\n      }, 500);\n    }\n  }, [messageInput, myUser, dispatch]);\n  useEffect(() => {\n    dispatch(getUsers());\n    dispatch(getMessages());\n  }, [dispatch]);\n  const usersData = useMemo(() => {\n    if (users.length < 1) {\n      return [];\n    }\n\n    return users.map(user => ({ ...user,\n      online: onlineUsers.some(onlineUsername => onlineUsername === user.username)\n    })).sort((a, b) => a.username.localeCompare(b.username));\n  }, [users, onlineUsers]);\n  const reversedMessages = useMemo(() => {\n    if (messages.length < 1) {\n      return [];\n    }\n\n    return [...messages].reverse();\n  }, [messages]);\n\n  if (usersLoading || messageLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen bg-gray-100\",\n      children: \"\\uB85C\\uB529\\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onClick: handleLogoutClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex m-0 content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        users: usersData,\n        myUser: myUser,\n        typingUsers: typingUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        messages: reversedMessages,\n        messageInput: messageInput,\n        handleSubmitForm: handleSubmitForm,\n        handleChangeInput: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"ZURvfrysfzr8x5bP/kZVAhTXM5E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/node/chat-site/client/src/screens/Main.tsx"],"names":["React","useState","useEffect","useMemo","useCallback","useSelector","useDispatch","dayjs","ChatArea","Navbar","Sidebar","sendMessage","getMessages","sendThisUserIsTyping","sendThisUserStoppedTyping","logout","getUsers","Main","dispatch","messageInput","setMessageInput","myUser","state","authState","users","loading","usersLoading","onlineUsers","typingUsers","usersState","messages","messageLoading","messagesState","handleLogoutClick","event","localStorage","removeItem","debouncedTypingIndicationEmit","_","debounce","username","handleSubmitForm","preventDefault","trim","message","content","date","format","author","handleChangeInput","target","value","console","log","setTimeout","usersData","length","map","user","online","some","onlineUsername","sort","a","b","localeCompare","reversedMessages","reverse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\n\r\nimport { ChatArea } from '../components/ChatArea';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { Sidebar } from '../components/Sidebar';\r\nimport { sendMessage, getMessages } from '../store/messages.slice';\r\nimport { sendThisUserIsTyping, sendThisUserStoppedTyping } from '../store/users.slice';\r\nimport { logout } from '../store/auth.slice';\r\nimport { RootState, Message } from '../utilities/types';\r\nimport { getUsers } from '../store/users.slice';\r\n\r\nexport const Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [messageInput, setMessageInput] = useState('');\r\n\r\n  const { myUser } = useSelector((state: RootState) => state.authState);\r\n  const { users, loading: usersLoading, onlineUsers, typingUsers } = useSelector((state: RootState) => state.usersState);\r\n  const { messages, loading: messageLoading } = useSelector((state: RootState) => state.messagesState);\r\n\r\n  const handleLogoutClick = (event: any) => {\r\n    // 로그아웃시 localStorage 유저 정보 삭제\r\n    localStorage.removeItem('user');\r\n\r\n    dispatch(logout());\r\n  };\r\n\r\n  const debouncedTypingIndicationEmit = useCallback(\r\n    _.debounce(() => dispatch(sendThisUserIsTyping(myUser!.username)), 500),\r\n    [] // will be created only once initially\r\n  );\r\n\r\n  const handleSubmitForm = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    if (messageInput && messageInput.trim() !== '') {\r\n      const message: Message = {\r\n        content: messageInput.trim(),\r\n        date: dayjs().format(),\r\n        author: myUser!.username,\r\n      };\r\n\r\n      dispatch(sendThisUserStoppedTyping(myUser!.username));\r\n      dispatch(sendMessage(message));\r\n    }\r\n\r\n    setMessageInput('');\r\n  };\r\n\r\n  const handleChangeInput = (event: any) => {\r\n    if (event.target.value !== '') setMessageInput(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('users: ', users);\r\n    if (messageInput === '') {\r\n      dispatch(sendThisUserStoppedTyping(myUser!.username));\r\n\r\n      setTimeout(() => {\r\n        dispatch(sendThisUserStoppedTyping(myUser!.username));\r\n      }, 500);\r\n    }\r\n  }, [messageInput, myUser, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getMessages());\r\n  }, [dispatch]);\r\n\r\n  const usersData = useMemo(() => {\r\n    if (users.length < 1) {\r\n      return [];\r\n    }\r\n\r\n    return users\r\n      .map((user) => ({\r\n        ...user,\r\n        online: onlineUsers.some((onlineUsername) => onlineUsername === user.username),\r\n      }))\r\n      .sort((a, b) => a.username.localeCompare(b.username));\r\n  }, [users, onlineUsers]);\r\n\r\n  const reversedMessages = useMemo(() => {\r\n    if (messages.length < 1) {\r\n      return [];\r\n    }\r\n\r\n    return [...messages].reverse();\r\n  }, [messages]);\r\n\r\n  if (usersLoading || messageLoading) {\r\n    return <div className='flex justify-center items-center h-screen bg-gray-100'>로딩중...</div>;\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar onClick={handleLogoutClick} />\r\n      <div className='flex m-0 content'>\r\n        <Sidebar users={usersData} myUser={myUser} typingUsers={typingUsers} />\r\n        <ChatArea\r\n          messages={reversedMessages}\r\n          messageInput={messageInput}\r\n          handleSubmitForm={handleSubmitForm}\r\n          handleChangeInput={handleChangeInput}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}