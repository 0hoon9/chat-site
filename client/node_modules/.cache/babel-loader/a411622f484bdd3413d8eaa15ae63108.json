{"ast":null,"code":"var _jsxFileName = \"C:\\\\node\\\\chat-site\\\\client\\\\src\\\\screens\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { ChatArea } from '../components/ChatArea';\nimport { Navbar } from '../components/Navbar';\nimport { Sidebar } from '../components/Sidebar';\nimport { sendMessage, getMessages } from '../store/messages.slice';\nimport { sendThisUserStoppedTyping } from '../store/users.slice';\nimport { logout } from '../store/auth.slice';\nimport { getUsers } from '../store/users.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [messageInput, setMessageInput] = useState('');\n  const {\n    myUser\n  } = useSelector(state => state.authState);\n  const {\n    users,\n    loading: userLoading,\n    onlineUsers,\n    typingUsers\n  } = useSelector(state => state.usersState);\n  const {\n    messages,\n    loading: messageLoading\n  } = useSelector(state => state.messagesState);\n\n  const handleLogoutClick = event => {\n    // 로그아웃시 localStorage 유저 정보 삭제\n    localStorage.removeItem('user');\n    dispatch(logout());\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    if (messageInput && messageInput.trim() !== '') {\n      const message = {\n        content: messageInput.trim(),\n        date: dayjs().format(),\n        author: myUser.username\n      };\n      dispatch(sendThisUserStoppedTyping(myUser.username));\n      dispatch(sendMessage(message));\n    }\n\n    setMessageInput('');\n  };\n\n  const handleChangeInput = event => {\n    if (event.target.value !== '') setMessageInput(event.target.value);\n  };\n\n  useEffect(() => {\n    if (messageInput === '') {\n      dispatch(sendThisUserStoppedTyping(myUser.username));\n      setTimeout(() => {\n        dispatch(sendThisUserStoppedTyping(myUser.username));\n      }, 500);\n    }\n  }, [messageInput, myUser, dispatch]);\n  useEffect(() => {\n    dispatch(getUsers());\n    dispatch(getMessages());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onClick: handleLogoutClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex m-0 content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        users: users,\n        myUser: myUser,\n        typingUsers: typingUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        messages: messages,\n        messageInput: messageInput,\n        handleSubmitForm: handleSubmitForm,\n        handleChangeInput: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"vLYJITKCbIvcDwODuZZzD/PIF/0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/node/chat-site/client/src/screens/Main.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","dayjs","ChatArea","Navbar","Sidebar","sendMessage","getMessages","sendThisUserStoppedTyping","logout","getUsers","Main","dispatch","messageInput","setMessageInput","myUser","state","authState","users","loading","userLoading","onlineUsers","typingUsers","usersState","messages","messageLoading","messagesState","handleLogoutClick","event","localStorage","removeItem","handleSubmitForm","preventDefault","trim","message","content","date","format","author","username","handleChangeInput","target","value","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport dayjs from 'dayjs';\r\n\r\nimport { ChatArea } from '../components/ChatArea';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { Sidebar } from '../components/Sidebar';\r\nimport { sendMessage, getMessages } from '../store/messages.slice';\r\nimport { sendThisUserIsTyping, sendThisUserStoppedTyping } from '../store/users.slice';\r\nimport { logout } from '../store/auth.slice';\r\nimport { RootState, Message } from '../utilities/types';\r\nimport { getUsers } from '../store/users.slice';\r\n\r\nexport const Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [messageInput, setMessageInput] = useState('');\r\n\r\n  const { myUser } = useSelector((state: RootState) => state.authState);\r\n  const { users, loading: userLoading, onlineUsers, typingUsers } = useSelector((state: RootState) => state.usersState);\r\n  const { messages, loading: messageLoading } = useSelector((state: RootState) => state.messagesState);\r\n\r\n  const handleLogoutClick = (event: any) => {\r\n    // 로그아웃시 localStorage 유저 정보 삭제\r\n    localStorage.removeItem('user');\r\n\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleSubmitForm = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    if (messageInput && messageInput.trim() !== '') {\r\n      const message: Message = {\r\n        content: messageInput.trim(),\r\n        date: dayjs().format(),\r\n        author: myUser!.username,\r\n      };\r\n\r\n      dispatch(sendThisUserStoppedTyping(myUser!.username));\r\n      dispatch(sendMessage(message));\r\n    }\r\n\r\n    setMessageInput('');\r\n  };\r\n\r\n  const handleChangeInput = (event: any) => {\r\n    if (event.target.value !== '') setMessageInput(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messageInput === '') {\r\n      dispatch(sendThisUserStoppedTyping(myUser!.username));\r\n\r\n      setTimeout(() => {\r\n        dispatch(sendThisUserStoppedTyping(myUser!.username));\r\n      }, 500);\r\n    }\r\n  }, [messageInput, myUser, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n    dispatch(getMessages());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar onClick={handleLogoutClick} />\r\n      <div className='flex m-0 content'>\r\n        <Sidebar users={users} myUser={myUser} typingUsers={typingUsers} />\r\n        <ChatArea\r\n          messages={messages}\r\n          messageInput={messageInput}\r\n          handleSubmitForm={handleSubmitForm}\r\n          handleChangeInput={handleChangeInput}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}