[{"C:\\node\\chat-site\\client\\src\\index.tsx":"1","C:\\node\\chat-site\\client\\src\\App.tsx":"2","C:\\node\\chat-site\\client\\src\\screens\\Main.tsx":"3","C:\\node\\chat-site\\client\\src\\Users.ts":"4","C:\\node\\chat-site\\client\\src\\components\\Navbar.tsx":"5","C:\\node\\chat-site\\client\\src\\components\\Sidebar.tsx":"6"},{"size":219,"mtime":1618819845263,"results":"7","hashOfConfig":"8"},{"size":153,"mtime":1618840384922,"results":"9","hashOfConfig":"8"},{"size":444,"mtime":1618840349819,"results":"10","hashOfConfig":"8"},{"size":578,"mtime":1618840034721,"results":"11","hashOfConfig":"8"},{"size":727,"mtime":1618844508630,"results":"12","hashOfConfig":"8"},{"size":1247,"mtime":1618840265300,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"uj4ear",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\node\\chat-site\\client\\src\\index.tsx",[],["28","29"],"C:\\node\\chat-site\\client\\src\\App.tsx",[],"C:\\node\\chat-site\\client\\src\\screens\\Main.tsx",[],"C:\\node\\chat-site\\client\\src\\Users.ts",[],"C:\\node\\chat-site\\client\\src\\components\\Navbar.tsx",[],"C:\\node\\chat-site\\client\\src\\components\\Sidebar.tsx",["30"],"import React from 'react';\r\nimport { User } from '../utilities/types';\r\n\r\nexport interface Props {\r\n  currentUser: User | null;\r\n  users: User[];\r\n  typingUsers: string[];\r\n}\r\n\r\nexport const Sidebar: React.FC<Props> = ({ users, currentUser, typingUsers }) => {\r\n  return (\r\n    <div className='flex-none min-w-300 bg-blue overflow-y-auto'>\r\n      <div>\r\n        <h2 className='m-6 text-white font-bold text-lg'>접속자</h2>\r\n        {users.map((user, i: number) => {\r\n          <div key={`${user.username}-${i}`} className='p-3 mx-6 my-2 text-white text-opacity-70 bg-blue-dark rounded-md'>\r\n            <div className='flex items-center'>\r\n              <div className={`h-2 w-2 mr-2 rounded-full inline-block ${user.online ? 'bg-green-400' : 'bg-blue-light'}`}></div>\r\n              <span>{user.username}</span>\r\n              {user.username === currentUser!.username && <span className='ml-1 text-white text-opacity-30'>(you)</span>}\r\n              {typingUsers.find((username) => user.username === username) && (\r\n                <span className='ml-1 text-white text-opacity-50 italic'>입력중...</span>\r\n              )}\r\n            </div>\r\n          </div>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":38,"nodeType":"37","messageId":"38","endLine":15,"endColumn":40},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]